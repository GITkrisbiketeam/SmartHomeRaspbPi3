apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
// Apply the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'
// Apply the Performance Monitoring plugin
apply plugin: 'com.google.firebase.firebase-perf'

android {
    signingConfigs {
        debug {
            storeFile file('./../debug.keystore')
            storePassword 'krisbiketeam'
            keyAlias 'krisbiketeam'
            keyPassword 'krisbiketeam'
        }
    }
    compileSdk compileWithSDK
    defaultConfig {
        applicationId "com.krisbiketeam.smarthomeraspbpi3"
        minSdkVersion minSdkVersionThings
        targetSdkVersion targetedSdkVersionThings
        versionCode 2
        versionName "2.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DPROJECT_DIR=${rootProject.projectDir}"
            }
        }
        ndk {
            abiFilters 'armeabi-v7a'
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        // Determines whether to generate a BuildConfig class.
        buildConfig = true
        // Determines whether to support View Binding.
        // Note that the viewBinding.enabled property is now deprecated.
        viewBinding = true
        // Determines whether to support Data Binding.
        // Note that the dataBinding.enabled property is now deprecated.
        dataBinding = true
        // Determines whether to generate binder classes for your AIDL files.
        aidl = true
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    namespace 'com.krisbiketeam.smarthomeraspbpi3'
}

dependencies {
    implementation project(':common')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinxCoroutinesAndroid"
    // Google dependencies
    implementation "androidx.legacy:legacy-support-v4:$androidxLegacySupportV4"
    implementation "androidx.appcompat:appcompat:$androidxAppcompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$androidxConstraintLayoutVersion"
    implementation "androidx.annotation:annotation:$androidxAnnotationVersion"
    implementation "androidx.core:core-ktx:$androidxCoreKtx"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinxSerialization"

    implementation "com.google.android.gms:play-services-base:$playServicesVersion"

    implementation platform("com.google.firebase:firebase-bom:$firebaseBom")
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    // Recommended: Add the Firebase SDK for Google Analytics.
    implementation 'com.google.firebase:firebase-analytics-ktx'
    // Add the dependency for the Performance Monitoring library
    implementation 'com.google.firebase:firebase-perf-ktx'

    implementation "io.insert-koin:koin-android:$koin_version"

    implementation "com.jakewharton.timber:timber:$timberVersion"

    compileOnly "com.google.android.things:androidthings:$thingsVersion"
    implementation "com.google.android.things.contrib:driver-rainbowhat:$rainbowhatVersion"
    implementation "com.knobtviker.android.things.contrib.community.driver:bme680:$bme680Version"

    implementation 'com.jakewharton:process-phoenix:2.0.0'

    testImplementation "junit:junit:$junitVersion"

    testImplementation 'com.google.android.things:androidthings:1.0'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
    testImplementation 'org.powermock:powermock-classloading-base:1.6.6'
    testImplementation 'org.powermock:powermock-classloading-xstream:1.6.6'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'

    androidTestImplementation 'androidx.test:runner:1.2.0'
}

apply plugin: "com.google.gms.google-services"
